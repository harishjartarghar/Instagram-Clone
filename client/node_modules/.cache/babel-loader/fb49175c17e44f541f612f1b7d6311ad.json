{"ast":null,"code":"import axios from 'axios';\nimport M from 'materialize-css';\nexport const signUp = (NewUser, props) => {\n  return (dispatch, getState) => {\n    axios.post('http://192.168.43.13:8080/api/auth/signup', NewUser, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      M.toast({\n        html: res.data.message,\n        classes: \"green\"\n      });\n      M.toast({\n        html: 'Login to see the images posted by your friends!',\n        classes: \"green\"\n      });\n      props.history.push('/login');\n      dispatch({\n        type: 'SIGNUP_SUCCESS',\n        payload: res\n      });\n    }).catch(error => {\n      M.toast({\n        html: error.response.data.message,\n        classes: \"red\"\n      });\n      dispatch({\n        type: 'SIGNUP_ERROR',\n        payload: error\n      });\n    });\n  };\n};\nexport const checkUsername = username => {\n  return (dispatch, getState) => {\n    axios.post('http://192.168.43.13:8080/api/auth/check', {\n      username\n    }).then(res => {\n      console.log(res);\n      dispatch({\n        type: 'NO_USER_EXIST'\n      });\n    }).catch(error => {\n      M.toast({\n        html: error.response.data.message,\n        classes: \"red\"\n      });\n      dispatch({\n        type: 'USER_EXIST'\n      });\n    });\n  };\n};\nexport const checkEmail = email => {\n  return (dispatch, getState) => {\n    axios.post('http://192.168.43.13:8080/api/auth/check', {\n      email\n    }).then(res => {\n      console.log(res);\n      dispatch({\n        type: 'NO_USER_EXIST'\n      });\n    }).catch(error => {\n      M.toast({\n        html: error.response.data.message,\n        classes: \"red\"\n      });\n      dispatch({\n        type: 'USER_EXIST'\n      });\n    });\n  };\n};\nexport const Login = (UserCredentials, props) => {\n  return (dispatch, getState) => {\n    axios.post('http://192.168.43.13:8080/api/auth/signin', UserCredentials, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      localStorage.setItem(\"jwt\", res.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n      M.toast({\n        html: res.data.message,\n        classes: \"green\"\n      });\n      props.history.push('/');\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: res.data\n      });\n    }).catch(error => {\n      console.log(error);\n      M.toast({\n        html: error.response.data.message,\n        classes: \"red\"\n      });\n      dispatch({\n        type: 'LOGIN_ERROR'\n      });\n    });\n  };\n};\nexport const CHECK_AUTH = () => {\n  return (dispatch, getState) => {\n    if (localStorage.getItem(\"jwt\")) {\n      const data = {\n        token: localStorage.getItem(\"jwt\"),\n        user: JSON.parse(localStorage.getItem(\"user\"))\n      };\n      dispatch({\n        type: 'LOGGED_IN',\n        payload: data\n      });\n    } else {\n      dispatch({\n        type: 'LOGGED_OUT'\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/harishjartarghar/Documents/reactjs/apps/instagram-clone/client/src/redux/actions/authActions.js"],"names":["axios","M","signUp","NewUser","props","dispatch","getState","post","headers","then","res","toast","html","data","message","classes","history","push","type","payload","catch","error","response","checkUsername","username","console","log","checkEmail","email","Login","UserCredentials","localStorage","setItem","token","JSON","stringify","user","CHECK_AUTH","getItem","parse"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport M from 'materialize-css';\n\n\nexport const signUp=(NewUser,props)=>{\n    return (dispatch,getState)=>{\n        axios.post('http://192.168.43.13:8080/api/auth/signup',NewUser,{headers:{'Content-Type': 'application/json'}})\n            .then(res=>{\n                M.toast({html:res.data.message,classes:\"green\"});\n                M.toast({html:'Login to see the images posted by your friends!',classes:\"green\"});\n                props.history.push('/login');\n                dispatch({type:'SIGNUP_SUCCESS',payload:res});\n                \n            })\n            .catch(error=>{\n                M.toast({html:error.response.data.message,classes:\"red\"});\n                dispatch({type:'SIGNUP_ERROR',payload:error});\n            });\n    }\n}\n\n\nexport const checkUsername=(username)=>{\n   return (dispatch,getState)=>{\n        axios.post('http://192.168.43.13:8080/api/auth/check',{username})\n        .then((res=>{\n            console.log(res);\n            dispatch({type:'NO_USER_EXIST'});\n        }))\n        .catch(error=>{\n        M.toast({html: error.response.data.message,classes:\"red\"})\n        dispatch({type:'USER_EXIST'});\n        });\n   }\n}\n\nexport const checkEmail=(email)=>{\n   return (dispatch,getState)=>{\n        axios.post('http://192.168.43.13:8080/api/auth/check',{email})\n        .then((res=>{\n            console.log(res);\n            dispatch({type:'NO_USER_EXIST'});\n        }))\n        .catch(error=>{\n        M.toast({html: error.response.data.message,classes:\"red\"});\n        dispatch({type:'USER_EXIST'});\n        });\n   }\n}\n\nexport const Login=(UserCredentials,props)=>{\n    return (dispatch,getState)=>{\n            axios.post('http://192.168.43.13:8080/api/auth/signin',UserCredentials,{headers:{'Content-Type': 'application/json'}})\n            .then(res=>{\n                \n                localStorage.setItem(\"jwt\",res.data.token);\n                localStorage.setItem(\"user\",JSON.stringify(res.data.user));\n                M.toast({html: res.data.message,classes:\"green\"});\n                props.history.push('/');\n                dispatch({type:'LOGIN_SUCCESS',payload:res.data});\n            })\n            .catch(error=>{\n                console.log(error);\n                M.toast({html: error.response.data.message,classes:\"red\"});\n                dispatch({type:'LOGIN_ERROR'});\n            })\n    }\n}\n\nexport const CHECK_AUTH=()=>{\n\n    return (dispatch,getState)=>{\n        if(localStorage.getItem(\"jwt\"))\n        {\n            const data={token:localStorage.getItem(\"jwt\"),user:JSON.parse(localStorage.getItem(\"user\"))}\n            dispatch({type:'LOGGED_IN',payload:data});\n        }\n        else{\n            dispatch({type:'LOGGED_OUT'});\n        }\n        \n    \n    }\n    }"]},"metadata":{},"sourceType":"module"}